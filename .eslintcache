[{"/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/index.js":"1","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/App.js":"2","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/Products/Products.jsx":"3","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/Products/Product/Product.jsx":"4","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/Products/Product/styles.js":"5","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/Navbar/Navbar.jsx":"6","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/Navbar/styles.js":"7","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/index.js":"8","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/Products/styles.js":"9","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/lib/commerce.js":"10","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/Cart/Cart.jsx":"11","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/Cart/styles.js":"12","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/Cart/CartItem/CartItem.jsx":"13","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/Cart/CartItem/styles.js":"14","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/CheckoutForm/Checkout/Checkout.jsx":"15","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/CheckoutForm/Checkout/styles.js":"16","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/CheckoutForm/AddressForm.jsx":"17","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/CheckoutForm/Paymentform.jsx":"18","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/CheckoutForm/CustomTextField.jsx":"19","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/CheckoutForm/Review.jsx":"20"},{"size":142,"mtime":1610072540263,"results":"21","hashOfConfig":"22"},{"size":2938,"mtime":1611545617452,"results":"23","hashOfConfig":"22"},{"size":1078,"mtime":1610159377598,"results":"24","hashOfConfig":"22"},{"size":1396,"mtime":1610161392206,"results":"25","hashOfConfig":"22"},{"size":352,"mtime":1610158518115,"results":"26","hashOfConfig":"22"},{"size":1499,"mtime":1610677256723,"results":"27","hashOfConfig":"22"},{"size":1564,"mtime":1610140106925,"results":"28","hashOfConfig":"22"},{"size":227,"mtime":1611117010995,"results":"29","hashOfConfig":"22"},{"size":286,"mtime":1610140930751,"results":"30","hashOfConfig":"22"},{"size":123,"mtime":1610150839063,"results":"31","hashOfConfig":"22"},{"size":1901,"mtime":1611115923492,"results":"32","hashOfConfig":"22"},{"size":569,"mtime":1610512376868,"results":"33","hashOfConfig":"22"},{"size":1501,"mtime":1610744199228,"results":"34","hashOfConfig":"22"},{"size":332,"mtime":1610674891634,"results":"35","hashOfConfig":"22"},{"size":2491,"mtime":1611545900287,"results":"36","hashOfConfig":"22"},{"size":1157,"mtime":1611116859539,"results":"37","hashOfConfig":"22"},{"size":5421,"mtime":1611280842056,"results":"38","hashOfConfig":"22"},{"size":3059,"mtime":1611545829533,"results":"39","hashOfConfig":"22"},{"size":535,"mtime":1611278787564,"results":"40","hashOfConfig":"22"},{"size":1083,"mtime":1611542412921,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"hl7z6g",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/index.js",[],["86","87"],"/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/App.js",[],"/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/Products/Products.jsx",[],"/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/Products/Product/Product.jsx",[],"/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/Products/Product/styles.js",[],"/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/Navbar/Navbar.jsx",["88","89"],"import React from 'react'\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography} from '@material-ui/core'\nimport { ShoppingCart } from '@material-ui/icons'\nimport { Link, useLocation } from 'react-router-dom'\n\nimport logo from '../../assets/bought-basket.png'\nimport useStyles from './styles'\n\nexport const Navbar = ({ totalItems}) => {\n    const classes = useStyles()\n    const location = useLocation()\n\n    return (\n        <>\n            <AppBar position='fixed' className={classes.appBar} color='inherit'>\n                <Toolbar>\n                    <Typography component={Link} to='/' variant='h6' className={classes.title} color='inherit' >\n                        <img src={logo} alt='Bought' height='25px' className={classes.image}  />\n                        Bought\n                    </Typography>\n                    <div className={classes.grow} />\n                    { location.pathname === '/' && (\n                        <dive className={classes.button}>\n                            <IconButton component={Link} to='/cart' aria-label='Show cart items' color='inherit'  >\n                                <Badge badgeContent={totalItems} color='secondary'>\n                                    <ShoppingCart />\n                                </Badge>\n                            </IconButton>\n                        </dive>\n                        )\n                    }\n                </Toolbar>\n            </AppBar>\n        </>\n    )\n}\nexport default Navbar","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/Navbar/styles.js",[],"/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/index.js",[],"/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/Products/styles.js",[],"/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/lib/commerce.js",[],"/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/Cart/Cart.jsx",[],"/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/Cart/styles.js",[],"/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/Cart/CartItem/CartItem.jsx",[],"/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/Cart/CartItem/styles.js",[],"/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/CheckoutForm/Checkout/Checkout.jsx",["90","91","92"],"/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/CheckoutForm/Checkout/styles.js",[],"/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/CheckoutForm/AddressForm.jsx",["93","94"],"import React, { useState, useEffect } from 'react'\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core'\nimport { useForm, FormProvider} from 'react-hook-form'\nimport { Link } from 'react-router-dom'\n\nimport { commerce } from '../../lib/commerce'\n\nimport FormInput from \"./CustomTextField\"\n\nconst AddressForm = ({ checkoutToken, next }) => {\n    const [shippingCountries, setShippingCountries ] = useState([])\n    const [shippingCountry, setShippingCountry ] = useState('')\n\n    const [shippingSubdivisions, setShippingSubdivisions ] = useState([])\n    const [shippingSubdivision, setShippingSubdivision ] = useState('')\n\n    const [shippingOptions, setShippingOptions ] = useState([])\n    const [shippingOption, setShippingOption ] = useState('')\n\n    const methods = useForm()\n\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name }))\n    // console.log(countries)\n    const subDivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name }))\n\n    const options = shippingOptions.map((sO) => ({id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` }))\n\n    const fetchShippingCountries = async (checkoutTokenId) => {\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId)\n        \n        console.log(countries)\n        setShippingCountries(countries)\n        setShippingCountry(Object.keys(countries)[0])\n    }\n\n    const fetchSubdivisions = async (countryCode) => {\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode)\n\n        setShippingSubdivisions(subdivisions)\n        setShippingSubdivision(Object.keys(subdivisions)[0])\n    }\n\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region })\n\n        setShippingOptions(options)\n        setShippingOption(options[0].id)\n\n    }\n\n   useEffect(() => {\n    fetchShippingCountries(checkoutToken.id)\n   }, []) \n\n   useEffect(() => {\n    if(shippingCountry) fetchSubdivisions(shippingCountry)\n   }, [shippingCountry])\n\n   useEffect(() => {\n    if(shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision)\n   }, [shippingSubdivision])\n\n    return (\n        <>\n           <Typography variant='h6' gutterBottom>Shipping Address</Typography>\n           <FormProvider {...methods}>\n                <form onSubmit={ methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }) )}>\n                    <Grid container spacing={3}>\n                        <FormInput  name='firstName' label='first name' />\n                        <FormInput  name='lastName' label='last name' />\n                        <FormInput  name='address1' label='address' />\n                        <FormInput  name='email' label='email' />\n                        <FormInput  name='city' label='city' />\n                        <FormInput  name='zip' label='postal code' />\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Country</InputLabel>\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                                {countries.map((country) => (\n                                    <MenuItem key={country.id} value={country.id}>\n                                        {country.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Subdivision</InputLabel>\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                                {subDivisions.map((subDivision) => (\n                                    <MenuItem key={subDivision.id} value={subDivision.id}>\n                                        {subDivision.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Options</InputLabel>\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                                {options.map((option) => (\n                                    <MenuItem key={option.id} value={option.id}>\n                                        {option.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <Button component={Link} to='/cart' variant='outlined'>Back to Cart</Button>\n                        <Button type='submit' variant='contained' color='primary'>Next</Button>\n                    </div>\n                </form>\n           </FormProvider>\n        </>\n    )\n}\n\nexport default AddressForm\n","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/CheckoutForm/Paymentform.jsx",["95"],"import React from 'react'\nimport { Typography, Button, Divider } from '@material-ui/core'\nimport { Elements, CardElement, ElementsConsumer } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\n\nimport Review from './Review'\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY)\n\nconst PaymentForm = ({ checkoutToken, shippingData, backStep, onCaptureCheckout, nextStep }) => {\n    \n    const handleSubmit = (event, elements, stripe) => {\n        event.preventDefault()\n\n        if(!stripe || !elements) return\n\n        const cardElement = elements.getElement(CardElement)\n\n        const { error, paymentMethod } = await stripe.createPaymentMethod({ type: 'card', card: cardElement })\n\n        if(error){\n            console.log(error)\n        } else {\n            const orderData = {\n                line_items: checkoutToken.live.line_items,\n                customer: { firstname: shippingData.firstName, lastname: shippingData.lastName, email: shipping.Data.email },\n                shipping: { \n                    name: 'Primary', \n                    street: shippingData.address1, \n                    town_city: shippingData.city,\n                    county_state: shippingData.shippingSubdivision,\n                    postal_zip_code: shippingData.zip,\n                    country: shippingData.shippingCountry,\n                },\n                fulfillment: { shipping_method: shippingData.shippingOption },\n                payment: {\n                    gateway: 'stripe',\n                    stripe: {\n                        payment_method_id: paymentMethod.id\n                    }\n                }\n            }\n            onCaptureCheckout(checkoutToken.id, orderData)\n\n            nextStep()\n        }\n    }\n\n    return (\n       <> \n        <Review checkoutToken={checkoutToken} />\n        <Divider />\n        <Typography variant='h6' gutterBottom style={{margin: '20px 0'}}>Payment Method</Typography>\n        <Elements stripe={stripePromise}>\n            <ElementsConsumer>\n                {({ elements, stripe }) => (\n                    <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\n                        <CardElement />\n                        <br /><br />\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                            <Button \n                            variant='outlined'\n                            onClick={backStep}\n                            >Back\n                            </Button>\n                            <Button \n                            type='submit' \n                            variant='contained' \n                            disabled={!stripe} \n                            color='primary'\n                            >Pay { checkoutToken.live.subtotal.formatted_with_symbol}\n                            </Button>\n                        </div>\n                    </form>\n                )}\n            </ElementsConsumer>\n        </Elements>\n       </>\n    )\n}\n\nexport default PaymentForm\n","/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/CheckoutForm/CustomTextField.jsx",[],"/Users/owlfarm/Desktop/Portfolio-Projects/bought/src/components/CheckoutForm/Review.jsx",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":46,"nodeType":"102","messageId":"103","endLine":2,"endColumn":54},{"ruleId":"100","severity":1,"message":"104","line":2,"column":56,"nodeType":"102","messageId":"103","endLine":2,"endColumn":60},{"ruleId":"100","severity":1,"message":"105","line":2,"column":55,"nodeType":"102","messageId":"103","endLine":2,"endColumn":71},{"ruleId":"100","severity":1,"message":"106","line":2,"column":73,"nodeType":"102","messageId":"103","endLine":2,"endColumn":80},{"ruleId":"100","severity":1,"message":"107","line":2,"column":82,"nodeType":"102","messageId":"103","endLine":2,"endColumn":88},{"ruleId":"108","severity":1,"message":"109","line":53,"column":7,"nodeType":"110","endLine":53,"endColumn":9,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":61,"column":7,"nodeType":"110","endLine":61,"endColumn":28,"suggestions":"113"},{"ruleId":null,"fatal":true,"severity":2,"message":"114","line":19,"column":42},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'CircularProgress' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["117"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["118"],"Parsing error: 'await' is only allowed within async functions\n\n\u001b[0m \u001b[90m 17 | \u001b[39m        \u001b[36mconst\u001b[39m cardElement \u001b[33m=\u001b[39m elements\u001b[33m.\u001b[39mgetElement(\u001b[33mCardElement\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 | \u001b[39m        \u001b[36mconst\u001b[39m { error\u001b[33m,\u001b[39m paymentMethod } \u001b[33m=\u001b[39m await stripe\u001b[33m.\u001b[39mcreatePaymentMethod({ type\u001b[33m:\u001b[39m \u001b[32m'card'\u001b[39m\u001b[33m,\u001b[39m card\u001b[33m:\u001b[39m cardElement })\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m        \u001b[36mif\u001b[39m(error){\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m            console\u001b[33m.\u001b[39mlog(error)\u001b[0m","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"123","text":"124"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"125","text":"126"},[2115,2117],"[checkoutToken.id]",[2359,2380],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]